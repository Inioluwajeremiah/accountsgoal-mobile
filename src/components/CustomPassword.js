import { useFonts } from "expo-font";
import React, { useState } from "react";
import { StyleSheet, TextInput, View } from "react-native";
import { TouchableOpacity } from "react-native";
import { Svg, Path } from "react-native-svg";
import CustomTextRegular from "./CustomTextRegular";
import { i18n } from "../localization";
import SelectTickIcon from "../Icons/SelectTickIcon";
import InvalidIcon from "../Icons/InvalidIcon";

const CustomPassword = ({ label, showVisibility, isValid, ...props }) => {
  const [secureTextEntry, setSecureTextEntry] = useState(true);

  const toggleSecureEntry = () => {
    setSecureTextEntry(!secureTextEntry);
  };

  const [fontsLoaded] = useFonts({
    SfProDisplayRegular: require("../../assets/fonts/SfProDisplayRegular.otf"),
  });

  if (!fontsLoaded) {
    return null;
  }

  return (
    <View>
      <CustomTextRegular className="text-[#A4B0BD] text-sm ">
        {i18n.t(`${label}`)}
      </CustomTextRegular>
      <View
        className={`flex flex-row  items-center w-full h-14 border rounded-md bg-[#1B2D47] mt-2 mb-5 px-2 ${
          isValid === "no" ? "border-[#EB5757]" : "border-[#42516C]"
        }`}
      >
        <TextInput
          {...props}
          secureTextEntry={secureTextEntry}
          className="caret-[#A4B0BD]  text-[#A4B0BD] text-base w-full"
          style={{
            fontFamily: "SfProDisplayRegular",
          }}
        />
        {showVisibility ? (
          <TouchableOpacity
            onPress={toggleSecureEntry}
            style={{ padding: 10 }}
            className="absolute right-1"
          >
            {secureTextEntry ? (
              <Svg
                width="20"
                height="16"
                viewBox="0 0 20 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <Path
                  d="M4.21249 0.704686C4.15761 0.642817 4.09099 0.592456 4.01649 0.556523C3.942 0.52059 3.86111 0.499799 3.77853 0.495356C3.69594 0.490913 3.61329 0.502906 3.53537 0.530639C3.45746 0.558373 3.38582 0.601296 3.32461 0.65692C3.2634 0.712544 3.21384 0.779764 3.17881 0.854682C3.14377 0.929601 3.12395 1.01073 3.1205 1.09336C3.11704 1.176 3.13003 1.2585 3.15869 1.33608C3.18736 1.41366 3.23114 1.48478 3.28749 1.54531L4.79062 3.19922C1.95312 4.94062 0.732805 7.625 0.678899 7.74687C0.643362 7.82681 0.625 7.91331 0.625 8.00078C0.625 8.08825 0.643362 8.17476 0.678899 8.25469C0.706243 8.3164 1.36796 9.78359 2.83905 11.2547C4.79921 13.2141 7.27499 14.25 9.99999 14.25C11.4005 14.258 12.7868 13.9696 14.068 13.4039L15.7867 15.2953C15.8416 15.3572 15.9082 15.4075 15.9827 15.4435C16.0572 15.4794 16.1381 15.5002 16.2207 15.5046C16.3033 15.5091 16.3859 15.4971 16.4638 15.4694C16.5417 15.4416 16.6134 15.3987 16.6746 15.3431C16.7358 15.2875 16.7854 15.2202 16.8204 15.1453C16.8554 15.0704 16.8753 14.9893 16.8787 14.9066C16.8822 14.824 16.8692 14.7415 16.8405 14.6639C16.8118 14.5863 16.7681 14.5152 16.7117 14.4547L4.21249 0.704686ZM11.1656 10.2117C10.6754 10.4696 10.1134 10.5574 9.56783 10.4613C9.02229 10.3652 8.52413 10.0906 8.15157 9.68063C7.77901 9.27069 7.55314 8.74863 7.50945 8.19642C7.46575 7.6442 7.6067 7.09311 7.91015 6.62969L11.1656 10.2117ZM19.3211 8.25469C19.2883 8.32812 18.4969 10.0805 16.7148 11.6766C16.592 11.7868 16.4306 11.8439 16.2658 11.8356C16.101 11.8273 15.9462 11.7541 15.8351 11.632L7.92187 2.92734C7.84617 2.84427 7.79426 2.74233 7.77163 2.63224C7.74899 2.52215 7.75646 2.408 7.79325 2.3018C7.83004 2.1956 7.89478 2.10129 7.98066 2.02879C8.06654 1.95629 8.17038 1.90829 8.28124 1.88984C8.84934 1.79604 9.4242 1.74927 9.99999 1.75C12.725 1.75 15.2008 2.78594 17.1609 4.74609C18.632 6.21719 19.2937 7.68516 19.3211 7.74687C19.3566 7.82681 19.375 7.91331 19.375 8.00078C19.375 8.08825 19.3566 8.17476 19.3211 8.25469Z"
                  fill="#A2B4C9"
                />
              </Svg>
            ) : (
              <Svg
                width="20"
                height="14"
                viewBox="0 0 20 14"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <Path
                  d="M19.6094 6.61719C19.0412 5.47119 18.2891 4.42608 17.3828 3.52344C15.3594 1.50781 12.8125 0.4375 10 0.4375C7.1875 0.4375 4.64063 1.50781 2.61719 3.52344C1.71092 4.42608 0.958762 5.47119 0.390627 6.61719C0.340337 6.73855 0.314453 6.86863 0.314453 7C0.314453 7.13137 0.340337 7.26145 0.390627 7.38281C0.958762 8.52881 1.71092 9.57392 2.61719 10.4766C4.64063 12.4922 7.1875 13.5625 10 13.5625C12.8125 13.5625 15.3594 12.4922 17.3828 10.4766C18.2891 9.57392 19.0412 8.52881 19.6094 7.38281C19.6597 7.26145 19.6856 7.13137 19.6856 7C19.6856 6.86863 19.6597 6.73855 19.6094 6.61719ZM16.0078 9.19531C14.3359 10.8516 12.3125 11.6875 10 11.6875C7.6875 11.6875 5.66406 10.8516 3.99219 9.19531C3.33313 8.54311 2.76547 7.80462 2.30469 7C2.76342 6.19402 3.33129 5.45527 3.99219 4.80469C5.66406 3.14844 7.6875 2.3125 10 2.3125C12.3125 2.3125 14.3359 3.14844 16.0078 4.80469C16.6669 5.45689 17.2345 6.19538 17.6953 7C17.2345 7.80462 16.6669 8.54311 16.0078 9.19531ZM10 3.5625C9.32013 3.5625 8.65552 3.76411 8.09023 4.14182C7.52494 4.51954 7.08434 5.0564 6.82417 5.68453C6.56399 6.31265 6.49592 7.00381 6.62855 7.67062C6.76119 8.33743 7.08858 8.94994 7.56932 9.43068C8.05007 9.91142 8.66257 10.2388 9.32938 10.3714C9.99619 10.5041 10.6874 10.436 11.3155 10.1758C11.9436 9.91566 12.4805 9.47507 12.8582 8.90977C13.2359 8.34448 13.4375 7.67987 13.4375 7C13.4375 6.08832 13.0753 5.21398 12.4307 4.56932C11.786 3.92466 10.9117 3.5625 10 3.5625ZM10 8.5625C9.69097 8.5625 9.38888 8.47086 9.13192 8.29917C8.87497 8.12748 8.6747 7.88345 8.55644 7.59794C8.43818 7.31243 8.40724 6.99827 8.46753 6.69517C8.52781 6.39208 8.67663 6.11367 8.89515 5.89515C9.11367 5.67663 9.39208 5.52781 9.69517 5.46752C9.99827 5.40723 10.3124 5.43818 10.5979 5.55644C10.8835 5.6747 11.1275 5.87497 11.2992 6.13192C11.4709 6.38887 11.5625 6.69097 11.5625 7C11.5604 7.41377 11.3952 7.81 11.1026 8.10259C10.81 8.39517 10.4138 8.56045 10 8.5625Z"
                  fill="#A2B4C9"
                />
              </Svg>
            )}
          </TouchableOpacity>
        ) : (
          <View className="absolute right-1">
            {isValid === "no" ? <InvalidIcon /> : null}
            {isValid === "yes" ? <SelectTickIcon /> : null}
          </View>
        )}
      </View>
    </View>
  );
};

const CustomPasswordStyle = StyleSheet.create({
  container: {
    backgroundColor: "#e8eceb",
    borderRadius: 10,
    height: 44,
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingHorizontal: 10,
    marginBottom: 20,
  },
});

export default CustomPassword;
